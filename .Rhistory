df_by_group <- stats %>%
group_by(same_sample) %>%
group_map(~ preprocessing(.x, colname)  %>%
preprocessing_combinations %>%
get_frequencies()
)  %>%
map_df(I, .id='same_sample')
df_by_group
df_by_group$same_sample<-as.factor(df_by_group$same_sample)
df_by_group$same_sample<-recode_factor(df_by_group$same_sample,
'1'=cats[1], '2'=cats[2], '3'=cats[3], '4'=cats[4], '5'=cats[5] )
comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1) %>%
filter(same_sample %in% c('3')) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
scale_fill_discrete(labels=categories[sel])+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
df_by_group
comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1) %>%
filter(same_sample %in% c('3')) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
scale_fill_discrete(labels=categories[sel])+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
get_combination_frequencies_by_group<-function(stats,colname){
df_by_group <- stats %>%
group_by(same_sample) %>%
group_map(~ preprocessing(.x, colname) %>%
preprocessing_combinations()%>%
get_frequencies()
)  %>%
map_df(I, .id='same_sample')
df_by_group$same_sample<-as.factor(df_by_group$same_sample)
#### Filter by categories
df_by_group$same_sample<-recode_factor(df_by_group$same_sample,
'1'=cats[1], '2'=cats[2], '3'=cats[3], '4'=cats[4], '5'=cats[5] )
return(frequencies_by_group)
}
comb_frequencies_by_group<-get_combination_frequencies_by_group(stats, 'Data')
comb_frequencies_by_group
df_by_group <- stats %>%
group_by(same_sample) %>%
group_map(~ preprocessing(.x, colname)  %>%
preprocessing_combinations %>%
get_frequencies()
)  %>%
map_df(I, .id='same_sample')
df_by_group$same_sample<-as.factor(df_by_group$same_sample)
df_by_group$same_sample<-recode_factor(df_by_group$same_sample,
'1'=cats[1], '2'=cats[2], '3'=cats[3], '4'=cats[4], '5'=cats[5] )
comb_frequencies_by_group<-df
comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1) %>%
filter(same_sample %in% c('3')) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
scale_fill_discrete(labels=categories[sel])+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
#DO NOT SPLIT#
stats_filter=stats
comb_frequencies_by_group<-df
comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1) %>%
filter(same_sample %in% c('3')) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
scale_fill_discrete(labels=categories[sel])+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
comb_frequencies_by_group<-df_by_group
comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1) %>%
filter(same_sample %in% c('3')) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
scale_fill_discrete(labels=categories[sel])+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
comb_frequencies_by_group<-df_by_group
comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1) %>%
filter(same_sample %in% c('3')) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
comb_frequencies_by_group<-df_by_group
comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1) %>%
filter(same_sample %in% c('3')) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
comb_frequencies_by_group
comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1) %>%
filter(same_sample %in% c('yes')) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
comb_frequencies_by_group<-df_by_group
comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1) %>%
# filter(same_sample %in% c('yes')) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
### todo remove reviews? #
## GLOBAL FILTER
stats <- stats %>%
filter(Type!= 'Review')
stats$same_sample<-as.factor(tolower(stats$same_sample))
get_frequencies_by_group<-function(stats,colname){
df_by_group<- stats %>%
#filter(Type!= 'Review') %>%
group_by(same_sample) %>%
group_map(~ preprocessing(.x, colname) %>%
get_frequencies()
)  %>%
map_df(I, .id='same_sample')
df_by_group$same_sample<-as.factor(df_by_group$same_sample)
#### Filter by categories
df_by_group$same_sample<-recode_factor(df_by_group$same_sample,
'1'=cats[1], '2'=cats[2], '3'=cats[3], '4'=cats[4], '5'=cats[5] )
return(df_by_group)
}
stats$same_sample<-as.factor(tolower(stats$same_sample))
colname<-'Data'
#### Also filter by omics
frequencies_by_group<-get_frequencies_by_group(stats, colname)
freq_to_plot<-frequencies_by_group %>% filter(Var1 %in% tolower(level1))
colname<-'Objective-Code'
frequencies_by_group<-get_frequencies_by_group(stats, colname)
frequencies_by_group$Freq<-as.numeric(frequencies_by_group$Freq)
frequencies_by_group$Var1<-sapply(frequencies_by_group$Var1,
function(x)
gsub('.*diagnosis.*|*prognosis*', 'Diagnosis/Prognosis', x))
freq_to_plot<-frequencies_by_group
library(grid)
ggplot(freq_to_plot, aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL)+
theme(axis.text.x = element_text(size=rel(1.3),angle = 25, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,2,1.5),"cm"))
ggsave(paste0('plots/by', as.character(colname), '.png'), width = 8, height = 5)
colname<-'Data'
omics_data<-df_by_group[[1]]
preprocessing_combinations<-function(omics_data){
#' Split the column
#'
omics_data<-omics_data[omics_data!='']
#
omics_data<-omics_data[!is.na(omics_data)]
#' Create pairs of omics
combinations<-lapply(omics_data, function(x) {
x<-unlist(x)
x<-x[tolower(x) %in% tolower(level1)]
if (length(x)>1){
x<-x[order(x)]
combn(x,2, FUN=paste, collapse=' - ')}
}
)
return(unlist(combinations))
}
df_by_group <- stats %>%
group_by(same_sample) %>%
group_map(~ preprocessing(.x, colname)  %>%
preprocessing_combinations %>%
get_frequencies()
)  %>%
map_df(I, .id='same_sample')
df_by_group$same_sample<-as.factor(df_by_group$same_sample)
df_by_group$same_sample<-recode_factor(df_by_group$same_sample,
'1'=cats[1], '2'=cats[2], '3'=cats[3], '4'=cats[4], '5'=cats[5] )
comb_frequencies_by_group<-df_by_group
comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1) %>%
# filter(same_sample %in% c('yes')) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
#DO NOT SPLIT#
stats_filter=stats
omics_data_combinations<-preprocessing_combinations(stats_filter, 'Data')
omics_data_frequencies<-get_frequencies(omics_data_combinations)
omics_data_frequencies<-omics_data_frequencies[omics_data_frequencies$Var1!=' - ',]
preprocessing_combinations<-function(omics_data){
#' Create combinations of omics datasets
omics_data<-omics_data[omics_data!='']
#
omics_data<-omics_data[!is.na(omics_data)]
#' Create pairs of omics
combinations<-lapply(omics_data, function(x) {
x<-unlist(x)
x<-x[tolower(x) %in% tolower(level1)]
if (length(x)>1){
x<-x[order(x)]
combn(x,2, FUN=paste, collapse=' - ')}
}
)
return(unlist(combinations))
}
df_by_group <- stats %>%
group_by(same_sample) %>%
group_map(~ preprocessing(.x, colname)  %>%
preprocessing_combinations %>%
get_frequencies()
)  %>%
map_df(I, .id='same_sample')
df_by_group$same_sample<-as.factor(df_by_group$same_sample)
df_by_group$same_sample<-recode_factor(df_by_group$same_sample,
'1'=cats[1], '2'=cats[2], '3'=cats[3], '4'=cats[4], '5'=cats[5] )
comb_frequencies_by_group<-df_by_group
comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1) %>%
# filter(same_sample %in% c('yes')) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
#####
#' Create an edge list from the frequency table !
omics_data_frequencies<-comb_frequencies_by_group
comb_frequencies_by_group
comb_frequencies_by_group<- comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1) %>%
filter(same_sample %in% c('yes'))
comb_frequencies_by_group
df_by_group <- stats %>%
group_by(same_sample) %>%
group_map(~ preprocessing(.x, colname)  %>%
preprocessing_combinations %>%
get_frequencies()
)  %>%
map_df(I, .id='same_sample')
df_by_group$same_sample<-as.factor(df_by_group$same_sample)
df_by_group$same_sample<-recode_factor(df_by_group$same_sample,
'1'=cats[1], '2'=cats[2], '3'=cats[3], '4'=cats[4], '5'=cats[5] )
df_by_group
df_by_group <- stats %>%
group_by(same_sample) %>%
group_map(~ preprocessing(.x, colname)  %>%
preprocessing_combinations %>%
get_frequencies()
)  %>%
map_df(I, .id='same_sample')
df_by_group$same_sample<-as.factor(df_by_group$same_sample)
df_by_group
df_by_group <- stats %>%
group_by(same_sample) %>%
group_map(~ preprocessing(.x, colname)  %>%
preprocessing_combinations %>%
get_frequencies()
)  %>%
map_df(I, .id='same_sample')
View(df_by_group)
df_by_group$same_sample<-recode_factor(df_by_group$same_sample,
'1'= 'NA', '2'=cats[1], '3'=cats[2], '4'=cats[3], '5'=cats[4] )
df_by_group
df_by_group <- stats %>%
group_by(same_sample) %>%
group_map(~ preprocessing(.x, colname)  %>%
preprocessing_combinations %>%
get_frequencies()
)  %>%
map_df(I, .id='same_sample')
df_by_group$same_sample<-as.factor(df_by_group$same_sample)
comb_frequencies_by_group<-df_by_group
comb_frequencies_by_group<- comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1)
comb_frequencies_by_group %>%
# filter(same_sample %in% c('yes')) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
comb_frequencies_by_group %>%
filter(same_sample %in% c(2)) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
comb_frequencies_by_group
comb_frequencies_by_group<- comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1)
df_by_group <- stats %>%
group_by(same_sample) %>%
group_map(~ preprocessing(.x, colname)  %>%
preprocessing_combinations %>%
get_frequencies()
)  %>%
map_df(I, .id='same_sample')
df_by_group$same_sample<-as.factor(df_by_group$same_sample)
comb_frequencies_by_group<-df_by_group
comb_frequencies_by_group<- comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1)
comb_frequencies_by_group<- comb_frequencies_by_group %>%
comb_frequencies_by_group<- comb_frequencies_by_group %>%
}
comb_frequencies_by_group
df_by_group <- stats %>%
group_by(same_sample) %>%
group_map(~ preprocessing(.x, colname)  %>%
preprocessing_combinations %>%
get_frequencies()
)  %>%
map_df(I, .id='same_sample')
df_by_group
comb_frequencies_by_group %>%
filter(same_sample %in% c(2)) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
#####
#' Create an edge list from the frequency table !
omics_data_frequencies<-comb_frequencies_by_group
# aggregated or separately?
aggr_freqs<-aggregate(Freq ~ Var1, comb_frequencies_by_group, sum)
comb_freq<-aggr_freqs
#comb_freq<- comb_frequencies_by_group %>% filter(same_sample ==3)
edge_list<-data.frame(do.call(rbind, str_split(comb_freq$Var1, ' - ')))
edge_list
edge_list$weight<-comb_freq$Freq
edge_list<-edge_list[order(edge_list$weight, decreasing = TRUE),]
edge_list
library(igraph)
#edge_list<-edge_list[edge_list$weight>1,]
net<-graph_from_data_frame(edge_list, directed = FALSE, vertices =NULL)
plot.igraph(net, edge.width=edge_list$weight)
#####
#' Create an edge list from the frequency table !
omics_data_frequencies<-comb_frequencies_by_group# %>% filter(same_sample %in% c(2))
# aggregated or separately?
aggr_freqs<-aggregate(Freq ~ Var1, comb_frequencies_by_group, sum)
comb_freq<-aggr_freqs
#comb_freq<- comb_frequencies_by_group %>% filter(same_sample ==3)
edge_list<-data.frame(do.call(rbind, str_split(comb_freq$Var1, ' - ')))
#####
#' Create an edge list from the frequency table !
omics_data_frequencies<-comb_frequencies_by_group %>% filter(same_sample %in% c(2))
# aggregated or separately?
aggr_freqs<-aggregate(Freq ~ Var1, comb_frequencies_by_group, sum)
comb_freq<-aggr_freqs
#comb_freq<- comb_frequencies_by_group %>% filter(same_sample ==3)
edge_list<-data.frame(do.call(rbind, str_split(comb_freq$Var1, ' - ')))
edge_list$weight<-comb_freq$Freq
edge_list<-edge_list[order(edge_list$weight, decreasing = TRUE),]
edge_list
library(igraph)
#edge_list<-edge_list[edge_list$weight>1,]
net<-graph_from_data_frame(edge_list, directed = FALSE, vertices =NULL)
plot.igraph(net, edge.width=edge_list$weight)
#####
#' Create an edge list from the frequency table !
omics_data_frequencies<-comb_frequencies_by_group #%>% filter(same_sample %in% c(2))
# aggregated or separately?
aggr_freqs<-aggregate(Freq ~ Var1, comb_frequencies_by_group, sum)
comb_freq<-aggr_freqs
#comb_freq<- comb_frequencies_by_group %>% filter(same_sample ==3)
edge_list<-data.frame(do.call(rbind, str_split(comb_freq$Var1, ' - ')))
edge_list$weight<-comb_freq$Freq
edge_list<-edge_list[order(edge_list$weight, decreasing = TRUE),]
edge_list
library(igraph)
#edge_list<-edge_list[edge_list$weight>1,]
net<-graph_from_data_frame(edge_list, directed = FALSE, vertices =NULL)
plot.igraph(net, edge.width=edge_list$weight)
#whay objectives  do proteomics and transcriptomics have?
grepl('proteomics.*transcriptomics',tolower(stats$Data[23]))
stats$Data<-tolower(stats$Data)
new<-dplyr::filter(stats, grepl("proteomics.*transcriptomics",tolower(Data)))
new$`Objective-Code`
#####
#' Create an edge list from the frequency table !
omics_data_frequencies<-comb_frequencies_by_group #%>% filter(same_sample %in% c(2))
# aggregated or separately?
aggr_freqs<-aggregate(Freq ~ Var1, comb_frequencies_by_group, sum)
comb_freq<-aggr_freqs
#comb_freq<- comb_frequencies_by_group %>% filter(same_sample ==3)
edge_list<-data.frame(do.call(rbind, str_split(comb_freq$Var1, ' - ')))
edge_list$weight<-comb_freq$Freq
edge_list<-edge_list[order(edge_list$weight, decreasing = TRUE),]
edge_list
library(igraph)
#edge_list<-edge_list[edge_list$weight>1,]
net<-graph_from_data_frame(edge_list, directed = FALSE, vertices =NULL)
plot.igraph(net, edge.width=edge_list$weight)
#whay objectives  do proteomics and transcriptomics have?
grepl('proteomics.*transcriptomics',tolower(stats$Data[23]))
stats$Data<-tolower(stats$Data)
new<-dplyr::filter(stats, grepl("proteomics.*transcriptomics",tolower(Data)))
comb_frequencies_by_group<-df_by_group
comb_frequencies_by_group<- comb_frequencies_by_group %>%
group_by(same_sample) %>%
filter(Freq>1)
#####
#' Create an edge list from the frequency table !
omics_data_frequencies<-comb_frequencies_by_group #%>% filter(same_sample %in% c(2))
# aggregated or separately?
aggr_freqs<-aggregate(Freq ~ Var1, comb_frequencies_by_group, sum)
comb_freq<-aggr_freqs
#comb_freq<- comb_frequencies_by_group %>% filter(same_sample ==3)
edge_list<-data.frame(do.call(rbind, str_split(comb_freq$Var1, ' - ')))
edge_list$weight<-comb_freq$Freq
edge_list<-edge_list[order(edge_list$weight, decreasing = TRUE),]
edge_list
#####
#' Create an edge list from the frequency table !
omics_data_frequencies<-comb_frequencies_by_group %>% filter(same_sample %in% c(2))
# aggregated or separately?
aggr_freqs<-aggregate(Freq ~ Var1, comb_frequencies_by_group, sum)
comb_freq<-aggr_freqs
#comb_freq<- comb_frequencies_by_group %>% filter(same_sample ==3)
edge_list<-data.frame(do.call(rbind, str_split(comb_freq$Var1, ' - ')))
edge_list$weight<-comb_freq$Freq
edge_list<-edge_list[order(edge_list$weight, decreasing = TRUE),]
edge_list
comb_frequencies_by_group
#####
#' Create an edge list from the frequency table !
omics_data_frequencies<-comb_frequencies_by_group %>% filter(same_sample %in% c(2))
# aggregated or separately?
aggr_freqs<-aggregate(Freq ~ Var1, omics_data_frequencies, sum)
comb_freq<-aggr_freqs
#comb_freq<- comb_frequencies_by_group %>% filter(same_sample ==3)
edge_list<-data.frame(do.call(rbind, str_split(comb_freq$Var1, ' - ')))
edge_list$weight<-comb_freq$Freq
edge_list<-edge_list[order(edge_list$weight, decreasing = TRUE),]
edge_list
library(igraph)
#edge_list<-edge_list[edge_list$weight>1,]
net<-graph_from_data_frame(edge_list, directed = FALSE, vertices =NULL)
plot.igraph(net, edge.width=edge_list$weight)
#whay objectives  do proteomics and transcriptomics have?
grepl('proteomics.*transcriptomics',tolower(stats$Data[23]))
stats$Data<-tolower(stats$Data)
new<-dplyr::filter(stats, grepl("proteomics.*transcriptomics",tolower(Data)))
new$`Objective-Code`
comb_frequencies_by_group %>%
filter(same_sample %in% c(2)) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
comb_frequencies_by_group %>%
filter(same_sample %in% c(2)) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
comb_frequencies_by_group %>%
#filter(same_sample %in% c(2)) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
comb_frequencies_by_group %>%
filter(same_sample %in% c(2)) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
comb_frequencies_by_group %>%
#filter(same_sample %in% c(2)) %>%
ggplot(data=., aes(x=reorder(Var1, -Freq, sum), y=Freq, fill=same_sample))+
geom_bar(stat='identity',position='stack')+
labs(x=NULL, title='Combinations with > 1 occurences')+
theme(axis.text.x = element_text(size=rel(1.3),angle = 35, vjust = 0.5, hjust=1))+
theme(plot.margin=unit(c(1,1,1.7,2.5),"cm"))
